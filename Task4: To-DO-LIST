/*****************************************************************************/
/*****************************************************************************/
/*****************     CodeSoft Internship            ************************/
/*****************     Intern: Abdullah Ahmed         ************************/
/*****************     Task no.: 4                    ************************/
/*****************     Task name:TO-DO-LIST           ************************/
/*****************************************************************************/
/*****************************************************************************/

#include <iostream>
#include <vector>
using namespace std;
struct Task {
    string description;
    bool completed;
};

void displayMenu() {
    cout << "1. Add task" << endl;
    cout << "2. View tasks" << endl;
    cout << "3. Mark task as completed" << endl;
    cout << "4. Remove task" << endl;
    cout << "5. Exit" << endl;
}

void addTask(vector<Task>& tasks) {
    string description;
    cout << "Enter task description: ";
    cin.ignore();
    getline(cin, description);

    Task newTask;
    newTask.description = description;
    newTask.completed = false;

    tasks.push_back(newTask);

    cout << "Task added successfully!" << endl;
}

void viewTasks(const vector<Task>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks found!" << std::endl;
    }
    else {
        cout << "Tasks:" << endl;
        for (int i = 0; i < tasks.size(); i++) {
            const Task& task = tasks[i];
            cout << i + 1 << ". ";
            if (task.completed) {
                cout << "[X] ";
            }
            else {
                cout << "[ ] ";
            }
            cout << task.description << endl;
        }
    }
}

void markTaskAsCompleted(vector<Task>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks found!" << endl;
    }
    else {
        int index;
        cout << "Enter the index of the task to mark as completed: ";
        cin >> index;

        if (index >= 1 && index <= tasks.size()) {
            Task& task = tasks[index - 1];
            task.completed = true;
            cout << "Task marked as completed!" << endl;
        }
        else {
            cout << "Invalid index!" << endl;
        }
    }
}

void removeTask(vector<Task>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks found!" << endl;
    }
    else {
        int index;
        cout << "Enter the index of the task to remove: ";
        cin >> index;

        if (index >= 1 && index <= tasks.size()) {
            tasks.erase(tasks.begin() + index - 1);
            cout << "Task removed successfully!" << endl;
        }
        else {
            cout << "Invalid index!" << endl;
        }
    }
}

int main() {
    vector<Task> tasks;

    int choice;

    do {
        displayMenu();
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
        case 1:
            addTask(tasks);
            break;

        case 2:
            viewTasks(tasks);
            break;

        case 3:
            markTaskAsCompleted(tasks);
            break;

        case 4:
            removeTask(tasks);
            break;

        case 5:
            cout << "Exiting program..." << endl;
            break;

        default:
            cout << "Invalid choice!" << endl;
            break;
        }

        cout << endl;
    } while (choice != 5);

    return 0;
}
